plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.mos'
version = '0.0.1-SNAPSHOT'

bootJar {
	archiveFileName = "mos.jar"
	// asciidoctor 결과를 static/docs에 포함
	dependsOn asciidoctor
	from("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	asciidoctorExt
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.10.0'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	implementation 'com.auth0:java-jwt:4.2.1'

	// aws
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation "software.amazon.awssdk:s3:2.31.8"
	implementation 'software.amazon.awssdk:regions:2.31.8'
	implementation 'software.amazon.awssdk:s3-transfer-manager:2.31.9'
	implementation 'software.amazon.awssdk:netty-nio-client:2.31.9'

	// chat
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mysql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

tasks.named('test') {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

task createSnippetsDir {
	doLast {
		file(snippetsDir).mkdirs()
	}
}

// Asciidoctor 설정
asciidoctor {
	dependsOn test, createSnippetsDir
	configurations 'asciidoctorExt'
	sourceDir file('src/docs/asciidoc')
	inputs.dir snippetsDir
	outputDir file("build/docs/asciidoc")
}

// processResources에서 asciidoctor 의존성 제거
processResources {
	// asciidoctor 결과를 직접 의존하지 않음
}

// clean 태스크
clean {
	delete file('src/main/generated')
}